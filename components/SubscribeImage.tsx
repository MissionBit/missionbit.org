import * as React from "react";
import Image from "next/image";
import subscribeImg from "public/images/subscribe/subscribe.jpg";

const SubscribeImage: React.FC<{ className?: string }> = ({ className }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    xmlnsXlink="http://www.w3.org/1999/xlink"
    viewBox="0 0 537.75 468"
    className={className}
  >
    <defs>
      <g id="paths">
        <path d="M525,260.25c3.83-.11,6.22.13,8.25,1.5,3.53,3.12,2.62,14.62,1.5,21-3.88,22.13-.27,48.73-12,63.75h-1.5l-222,.75c-9.41-4.9-9.66-21.83-12.75-33-5.82-21-29.74-91.61-25.5-109.5,10.17-6.73,32.76-4.7,49.5-4.5-6.89-42.68,1.94-81.19,45.75-80.25,4.44-8.41,11-15.75,13.5-26.25L373.5,58.5C379.64,38,392.46,12,411,3.75c8.24-3.69,21.92-2.29,30,0,29.35,8.31,29.59,34.21,35.25,66l-1.5,33.75c1.6,14.09,13.73,19.8,19.5,30.75,2,3.84,3.46,11.51,2.25,15.75l11.25,21.75,7.5,26.25c1.87,3.33,6.88,4.38,8.25,9Z" />
        <path d="M175.5,3c8.87.76,36.73,10.23,41.25,16.5,6.68,9.26,10.72,61,8.25,75-1.5,8.51-7.69,20.52-6,25.5,10.82,3.92,28,14.31,32.25,24.75,10.21,24.94-14.85,61-21.75,78L227.25,234l-7.5,4.5-4.5,11.25-7.5,3.75L223.5,321c21.58,5.64,50,28.22,69,39.75,7.36,4.47,19.76,8.31,24,15.75l-.75,11.25c-5.65,9.64-30.36,13.59-41.25,18L156,452.25c-9.05,3.68-35.82,16.69-46.5,12.75-9.63-4.52-17.53-16.73-24-24.75-15.89-19.7-35.74-36.58-53.25-54.75C35,357.56,16.33,303.28,9,274.5c-2.58-10.14-11.75-36.08-2.25-42,7.26-6.52,39.92-9.43,51.75-12C58.41,194.71,53,158.76,63,141c5.76-10.25,41.33-27.66,54-32.25,6.43-2.33,13.59-1.83,18.75-4.5l.75-4.5c-16-15.67-5.22-33.14-11.25-54.75,1.72-3,1.49-3.3,6-3.75-4.41-10.71,20.24-30.13,28.5-34.5C165.92,3.49,171.8,6.22,175.5,3Z" />
      </g>
      <mask id="mask">
        <use xlinkHref="#paths" fill="white" />
      </mask>
    </defs>
    <foreignObject x="0" y="0" height="100%" width="100%" mask="url(#mask)">
      <Image src={subscribeImg} alt="" />
    </foreignObject>
    <use
      xlinkHref="#paths"
      stroke="#FB8B00"
      strokeWidth="3px"
      fill="transparent"
    />
  </svg>
);

export default SubscribeImage;
